x-common: &common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - .env
  volumes:
    - ./src:/usr/src/app/src
    - ./alembic.ini:/usr/src/app/alembic.ini

services:
  db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U \"$DB_USER\" -d \"$DB_NAME\"'"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  migrations:
    <<: *common
    command: bash -c "alembic upgrade head"
    depends_on:
      db:
        condition: service_healthy

  app:
    <<: *common
    command: uvicorn src.main:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

  celery:
    <<: *common
    command: celery -A src.tasks_manager.celery_app worker --loglevel=info
    environment:
      PYTHONPATH: /usr/src/app/src
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

  beat:
    <<: *common
    command: celery -A src.tasks_manager.celery_app beat --loglevel=info
    environment:
      PYTHONPATH: /usr/src/app/src
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

volumes:
  pgdata:
