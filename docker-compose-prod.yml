x-common: &common
  build:
    context: .
    dockerfile: docker/prod/Dockerfile
  env_file:
    - .env.prod

services:
  db:
    image: postgres:16.3
    restart: always
    env_file:
      - .env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\""]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.2
    restart: always
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  migrations:
    <<: *common
    command: bash -c "alembic upgrade head"
    depends_on:
      db:
        condition: service_healthy

  app:
    <<: *common
    command: ["/bin/bash", "/commands/run_server_prod.sh" ]
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

  celery:
    <<: *common
    command: celery -A src.tasks_manager.celery_app worker --loglevel=info
    environment:
      PYTHONPATH: /usr/src/app/src
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

  beat:
    <<: *common
    command: celery -A src.tasks_manager.celery_app beat --loglevel=info
    environment:
      PYTHONPATH: /usr/src/app/src
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

  stripe:
    image: stripe/stripe-cli:latest
    container_name: stripe-cli
    entrypoint: >
      sh -c "stripe listen --forward-to $${STRIPE_WEBHOOK_FORWARD_URL}"
    environment:
      STRIPE_API_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_FORWARD_URL: ${STRIPE_WEBHOOK_FORWARD_URL}
    env_file:
      - .env.prod
    depends_on:
      app:
        condition: service_started

volumes:
  pgdata:
